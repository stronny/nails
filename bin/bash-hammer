#!/usr/bin/env bash
#
# This is a wrapper for bash scripts to enable the usage of nails.
# To use it change the script's shebang to "#!/usr/bin/env bash-hammer".
#
# https://github.com/stronny/nails

# ----------------------------------------------------------------------------
# Versions management
#
if [[ "$BASH_VERSION" < '4' ]]; then
	echo 'bash-hammer requires bash version 4 or higher'
	exit 1
fi
declare -gr __NAILS_VERSION='1.0.0-pre1'

# ----------------------------------------------------------------------------
# Check the arguments
#
case "$1" in
	''|-h|--help)
		echo 'Usage: bash-hammer filename [arguments]'
		echo '       This program is not intended to be run directly.'
		echo '       Please look inside to find out more.'
		exit
	;;
	-v|-V|--version)
		echo "bash-hammer version ${__NAILS_VERSION}"
		exit
	;;
	--) : ;; # it means "if arg #1 is two dashes, then do nothing"
	-*)
		echo "bash-hammer: $1: invalid option" >&2
		exit 1
	;;
esac

# ----------------------------------------------------------------------------
# Define the magic
#
function require {
	local nailfile="$1"
	local nail="${nailfile%%/*}"
	local dirs=( )
	local dir
	local filename
	local path
	local line
	shift

	IFS=':' read -a dirs <<< "${__NAILS_PATH}"
	for dir in "${dirs[@]}"; do
		filename="$dir/$nail/lib/$nailfile.bash"
		[[ "${__NAILS_FILES[$filename]}" ]] && return 0
		[[ -f "$filename" ]] && break
		filename=''
	done

	read line path path < <(caller 0)
	if [[ "$filename" ]]; then
		__NAILS_FILES["$filename"]="$path:$line"
		unset nailfile nail dirs dir path line # FIXME find a way to unset filename as well
		source "$filename" "$@"
	else
		echo "$path:$line: $FUNCNAME: $nailfile: no such file" >&2
		exit 127
	fi
}

# ----------------------------------------------------------------------------
# Let's get dangerous!
#
declare -g  __NAILS_PATH=~/.nails:/usr/local/lib/nails
declare -gA __NAILS_FILES
source "$@"
